<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>2.30</version>
    </parent>

    <groupId>de.silpion.jenkins.plugins</groupId>
    <artifactId>gitflow</artifactId>
    <version>1.0.1</version>
    <packaging>hpi</packaging>

    <name>Gitflow Plugin</name>
    <description>Perform Gitflow actions from Jenkins</description>
    <url>https://wiki.jenkins.io/display/JENKINS/Gitflow+Plugin</url>
    <inceptionYear>2014</inceptionYear>
    <organization>
        <name>Silpion IT-Solutions GmbH</name>
        <url>http://www.silpion.de</url>
    </organization>
    <licenses>
        <license>
            <name>The MIT License</name>
            <url>https://mitlicense.org</url>
            <distribution>repo</distribution>
            <comments>All source code is under the MIT license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>marcrohlfs</id>
            <name>Marc Rohlfs</name>
            <email>Marc.Rohlfs@t-systems.com</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
            <properties>
                <picUrl>https://avatars0.githubusercontent.com/u/6331380</picUrl>
            </properties>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>Maria Luedemann</name>
            <email>luedemann@silpion.de</email>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
            <properties>
                <id>luedemann</id>
            </properties>
        </contributor>
        <contributor>
            <name>Hannes Osius</name>
            <email>osius@silpion.de</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
            <properties>
                <id>osius</id>
            </properties>
        </contributor>
    </contributors>

    <issueManagement>
        <system>JIRA</system>
        <url>https://issues.jenkins-ci.org/issues/?jql=project%20%3D%20JENKINS%20AND%20component%20%3D%20gitflow-plugin</url>
    </issueManagement>

    <scm>
        <connection>scm:git:git://github.com/jenkinsci/gitflow-plugin.git</connection>
        <developerConnection>scm:git:git@github.com:jenkinsci/gitflow-plugin.git</developerConnection>
        <url>https://github.com/jenkinsci/gitflow-plugin</url>
        <tag>HEAD</tag>
    </scm>

    <ciManagement>
        <system>Jenkins</system>
        <url>https://ci.jenkins.io/job/Plugins/job/gitflow-plugin</url>
    </ciManagement>

    <properties>
        <jenkins.version>2.7.4</jenkins.version>
        <maven.compiler.source>1.${java.level}</maven.compiler.source>
        <maven.compiler.target>1.${java.level}</maven.compiler.target>
        <jenkinsHome>${project.basedir}/work</jenkinsHome>
        <powermock.version>1.6.6</powermock.version>
    </properties>

    <dependencies>

        <!-- Dependencies to other Jenkins plugins -->
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>git</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>git-client</artifactId>
            <version>1.19.0</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>gradle</artifactId>
            <version>1.24</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <artifactId>maven-plugin</artifactId>
            <version>2.13</version>
        </dependency>

        <dependency>
            <groupId>org.semver</groupId>
            <artifactId>api</artifactId>
            <version>0.9.33</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.4</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <artifactId>jenkins-test-harness-tools</artifactId>
            <version>2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>http://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>http://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <version>3.2.1</version>
                            <message>***** At least Maven version 3.2.1 is required, because this project uses wildcard exclusions for transitive dependencies! *****</message>
                        </requireMavenVersion>
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes combine.children="append">
                        <exclude>**/Test*IT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!-- Automatically create the base configuration for the Jenkins development workspace when it doesn't exist. -->
        <profile>
            <id>prepare-developement-workspace</id>
            <activation>
                <file>
                    <!-- NOTE: This must match ${jenkinsHome}. -->
                    <missing>${basedir}/work</missing>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>workspace-unpack-test-repo</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <untar dest="${jenkinsHome}/git-remote" compression="gzip">
                                            <fileset dir="${project.basedir}/src/dev/assets/work/git-remote" includes="*.git.tgz" />
                                        </untar>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>workspace-base-configuration</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                    <delimiters>
                                        <delimiter>${*}</delimiter>
                                    </delimiters>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/src/dev/assets/work</directory>
                                            <filtering>false</filtering>
                                            <includes>
                                                <include>config.xml</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>${project.basedir}/src/dev/assets/work</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>jobs/*/config.xml</include>
                                                <include>hudson.*.xml</include>
                                            </includes>
                                            <!-- Disable creation of freestyle projects as they'll produce errors until JGP-37 is resolved. -->
                                            <excludes>
                                                <exclude>jobs/freestyle-*/config.xml</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                    <outputDirectory>${jenkinsHome}</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
